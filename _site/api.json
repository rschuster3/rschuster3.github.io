{
    "website_title": "Ryan Schuster",
    "website_url": "http://localhost:4000/",
    "posts": [
        
    ],
    "pages": [
            
            {
                "id": "hello jekyll",
                "title": "Hello Jekyll",
                "content_text": "Text can be bold, italic, strikethrough or keywordLink to another page.There should be whitespace between paragraphs.There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project.Header 1This is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere.Header 2  This is a blockquote following a header.  When something is important enough, you do it even if the odds are not in your favor.Header 3// Javascript code with syntax highlighting.var fun = function lang(l) {  dateformat.i18n = require('./lang/' + l)  return true;}# Ruby code with syntax highlightingGitHubPages::Dependencies.gems.each do |gem, version|  s.add_dependency(gem, \"= #{version}\")endHeader 4  This is an unordered list following a header.  This is an unordered list following a header.  This is an unordered list following a header.Header 5  This is an ordered list following a header.  This is an ordered list following a header.  This is an ordered list following a header.Header 6            head1      head two      three                  ok      good swedish fish      nice              out of stock      good and plenty      nice              ok      good oreos      hmm              ok      good zoute drop      yumm      There’s a horizontal rule below this.Here is an unordered list:  Item foo  Item bar  Item baz  Item zipAnd an ordered list:  Item one  Item two  Item three  Item fourAnd a nested list:  level 1 item          level 2 item      level 2 item                  level 3 item          level 3 item                      level 1 item          level 2 item      level 2 item      level 2 item        level 1 item          level 2 item      level 2 item        level 1 itemSmall imageLong, single-line code blocks should not wrap. They should horizontally scroll if they are too long.Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long.The final element.",
                "content_html": "<p>Text can be <strong>bold</strong>, <em>italic</em>, <del>strikethrough</del> or <code class=\"highlighter-rouge\">keyword</code></p><p><a href=\"./another-page.html\">Link to another page</a>.</p><p>There should be whitespace between paragraphs.</p><p>There should be whitespace between paragraphs. We recommend including a README, or a file with information about your project.</p><h1 id=\"header-1\">Header 1</h1><p>This is a normal paragraph following a header. GitHub is a code hosting platform for version control and collaboration. It lets you and others work together on projects from anywhere.</p><h2 id=\"header-2\">Header 2</h2><blockquote>  <p>This is a blockquote following a header.</p>  <p>When something is important enough, you do it even if the odds are not in your favor.</p></blockquote><h3 id=\"header-3\">Header 3</h3><div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">// Javascript code with syntax highlighting.</span><span class=\"kd\">var</span> <span class=\"nx\">fun</span> <span class=\"o\">=</span> <span class=\"kd\">function</span> <span class=\"nx\">lang</span><span class=\"p\">(</span><span class=\"nx\">l</span><span class=\"p\">)</span> <span class=\"p\">{</span>  <span class=\"nx\">dateformat</span><span class=\"p\">.</span><span class=\"nx\">i18n</span> <span class=\"o\">=</span> <span class=\"nx\">require</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">./lang/</span><span class=\"dl\">'</span> <span class=\"o\">+</span> <span class=\"nx\">l</span><span class=\"p\">)</span>  <span class=\"k\">return</span> <span class=\"kc\">true</span><span class=\"p\">;</span><span class=\"p\">}</span></code></pre></div></div><div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Ruby code with syntax highlighting</span><span class=\"no\">GitHubPages</span><span class=\"o\">::</span><span class=\"no\">Dependencies</span><span class=\"p\">.</span><span class=\"nf\">gems</span><span class=\"p\">.</span><span class=\"nf\">each</span> <span class=\"k\">do</span> <span class=\"o\">|</span><span class=\"n\">gem</span><span class=\"p\">,</span> <span class=\"n\">version</span><span class=\"o\">|</span>  <span class=\"n\">s</span><span class=\"p\">.</span><span class=\"nf\">add_dependency</span><span class=\"p\">(</span><span class=\"n\">gem</span><span class=\"p\">,</span> <span class=\"s2\">\"= </span><span class=\"si\">#{</span><span class=\"n\">version</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span><span class=\"k\">end</span></code></pre></div></div><h4 id=\"header-4\">Header 4</h4><ul>  <li>This is an unordered list following a header.</li>  <li>This is an unordered list following a header.</li>  <li>This is an unordered list following a header.</li></ul><h5 id=\"header-5\">Header 5</h5><ol>  <li>This is an ordered list following a header.</li>  <li>This is an ordered list following a header.</li>  <li>This is an ordered list following a header.</li></ol><h6 id=\"header-6\">Header 6</h6><table>  <thead>    <tr>      <th style=\"text-align: left\">head1</th>      <th style=\"text-align: left\">head two</th>      <th style=\"text-align: left\">three</th>    </tr>  </thead>  <tbody>    <tr>      <td style=\"text-align: left\">ok</td>      <td style=\"text-align: left\">good swedish fish</td>      <td style=\"text-align: left\">nice</td>    </tr>    <tr>      <td style=\"text-align: left\">out of stock</td>      <td style=\"text-align: left\">good and plenty</td>      <td style=\"text-align: left\">nice</td>    </tr>    <tr>      <td style=\"text-align: left\">ok</td>      <td style=\"text-align: left\">good <code class=\"highlighter-rouge\">oreos</code></td>      <td style=\"text-align: left\">hmm</td>    </tr>    <tr>      <td style=\"text-align: left\">ok</td>      <td style=\"text-align: left\">good <code class=\"highlighter-rouge\">zoute</code> drop</td>      <td style=\"text-align: left\">yumm</td>    </tr>  </tbody></table><h3 id=\"theres-a-horizontal-rule-below-this\">There’s a horizontal rule below this.</h3><hr /><h3 id=\"here-is-an-unordered-list\">Here is an unordered list:</h3><ul>  <li>Item foo</li>  <li>Item bar</li>  <li>Item baz</li>  <li>Item zip</li></ul><h3 id=\"and-an-ordered-list\">And an ordered list:</h3><ol>  <li>Item one</li>  <li>Item two</li>  <li>Item three</li>  <li>Item four</li></ol><h3 id=\"and-a-nested-list\">And a nested list:</h3><ul>  <li>level 1 item    <ul>      <li>level 2 item</li>      <li>level 2 item        <ul>          <li>level 3 item</li>          <li>level 3 item</li>        </ul>      </li>    </ul>  </li>  <li>level 1 item    <ul>      <li>level 2 item</li>      <li>level 2 item</li>      <li>level 2 item</li>    </ul>  </li>  <li>level 1 item    <ul>      <li>level 2 item</li>      <li>level 2 item</li>    </ul>  </li>  <li>level 1 item</li></ul><h3 id=\"small-image\">Small image</h3><p><img src=\"https://www.codingindian.codes/assets/uploads/pro.jpg\" alt=\"Octocat\" /></p><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long.Long, single-line code blocks should not wrap. They should horizontally scroll if they are too long.</code></pre></div></div><div class=\"highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>The final element.</code></pre></div></div>",
                "url": "http://localhost:4000/all_collections/samples/2019-11-11-Jekyll.html",
                "date_published": "2018-10-09T00:00:00-07:00",
                "date_modified": "2018-10-09T00:00:00-07:00"
            },
        
            {
                "id": "about",
                "title": "About",
                "content_text": "  Hi there this is Sharad, the developer of this theme.My Social Media LinksMy InstagramMy LinkedinMy Github",
                "content_html": "<blockquote>  <p>Hi there this is Sharad, the developer of this theme.</p></blockquote><p><img src=\"https://www.codingindian.codes/assets/uploads/pro.jpg\" alt=\"Sharad\" /></p><p>My Social Media Links</p><p><a href=\"http://instagram.com/codingindian\">My Instagram</a></p><p><a href=\"http://linkedin.com/in/srsmaurya\">My Linkedin</a></p><p><a href=\"http://github.com/sharadcodes\">My Github</a></p>",
                "url": "http://localhost:4000/about.html",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "",
                "title": null,
                "content_text": "{    \"website_title\": \"{{ site.title | xml_escape }}\",    \"website_url\": \"{{ \"/\" | absolute_url }}\",    \"posts\": [        {% for post in site.posts %}            {                \"title\": {{ post.title | jsonify }},                \"content_text\": {{ post.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ post.content | strip_newlines | jsonify }},                \"url\": \"{{ post.url | absolute_url }}\",                {% if post.image.size > 0 %}                \"image\": {{ post.image | jsonify }},{% endif %}                {% if post.categories.size > 0 %}                \"categories\": {{ post.categories | jsonify }},{% endif %}                                {% if post.tags.size > 0 %}                \"tags\": {{ post.tags | jsonify }},{% endif %}                \"date_published\": \"{{ post.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ post.date | date_to_xmlschema }}\",                {% if post.author %}                \"author\": {% if post.author.name %} \"{{ post.author.name }}\" {% else %} \"{{ post.author }}\" {% endif %}                {% else %}                \"author\": {% if site.author.name %} \"{{ site.author.name }}\" {% else %} \"{{ site.author }}\" {% endif %}                {% endif %}            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ],    \"pages\": [            {% for page in site.pages %}            {                \"id\": {{page.title | downcase | jsonify}},                \"title\": {{ page.title | jsonify }},                \"content_text\": {{ page.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ page.content | strip_newlines | jsonify }},                \"url\": \"{{ page.url | absolute_url }}\",                \"date_published\": \"{{ page.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ page.date | date_to_xmlschema }}\"            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ]           }",
                "content_html": "{    \"website_title\": \"{{ site.title | xml_escape }}\",    \"website_url\": \"{{ \"/\" | absolute_url }}\",    \"posts\": [        {% for post in site.posts %}            {                \"title\": {{ post.title | jsonify }},                \"content_text\": {{ post.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ post.content | strip_newlines | jsonify }},                \"url\": \"{{ post.url | absolute_url }}\",                {% if post.image.size > 0 %}                \"image\": {{ post.image | jsonify }},{% endif %}                {% if post.categories.size > 0 %}                \"categories\": {{ post.categories | jsonify }},{% endif %}                                {% if post.tags.size > 0 %}                \"tags\": {{ post.tags | jsonify }},{% endif %}                \"date_published\": \"{{ post.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ post.date | date_to_xmlschema }}\",                {% if post.author %}                \"author\": {% if post.author.name %} \"{{ post.author.name }}\" {% else %} \"{{ post.author }}\" {% endif %}                {% else %}                \"author\": {% if site.author.name %} \"{{ site.author.name }}\" {% else %} \"{{ site.author }}\" {% endif %}                {% endif %}            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ],    \"pages\": [            {% for page in site.pages %}            {                \"id\": {{page.title | downcase | jsonify}},                \"title\": {{ page.title | jsonify }},                \"content_text\": {{ page.content | strip_html | strip_newlines | jsonify }},                \"content_html\": {{ page.content | strip_newlines | jsonify }},                \"url\": \"{{ page.url | absolute_url }}\",                \"date_published\": \"{{ page.date | date_to_xmlschema }}\",                \"date_modified\": \"{{ page.date | date_to_xmlschema }}\"            }{% if forloop.last == false %},{% endif %}        {% endfor %}    ]           }",
                "url": "http://localhost:4000/api.json",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "welcome!",
                "title": "Welcome!",
                "content_text": "  Side projects by me!",
                "content_html": "<p>  Side projects by me!</p>",
                "url": "http://localhost:4000/",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "brains are fun",
                "title": "Brains Are Fun",
                "content_text": "Here we'll be covering _Theoretical Neuroscience: Computational and Mathematical MOdeling of Neural Systems_, by Peter Dayan and L. F. Abbott.{% for post in site.neuroblog %}  {{post.title}}{% endfor %}",
                "content_html": "Here we'll be covering _Theoretical Neuroscience: Computational and Mathematical MOdeling of Neural Systems_, by Peter Dayan and L. F. Abbott.{% for post in site.neuroblog %}  <a href=\"{{site.baseurl}}{{post.url}}\">{{post.title}}</a>{% endfor %}",
                "url": "http://localhost:4000/neuroblog.html",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "why?",
                "title": "Why?",
                "content_text": "I'm getting a little bored of vanilla back end web development. Sure, building APIs and deploying them to the cloud is fun and all, but you can only do that so many times before it starts to get a little old. So I figured \"Why not learn more about AI?\" and, not wanting to sell myself short, decided to go way back to the basics: Computational Neuroscience. All those neural nets and reinforcement learning algorithms came from somewhere, and that somewhere was the human brain! This blog will cover Dayan and Abbot's _Theoretical Neuroscience_ textbook. I'll try to interpret the math as best I can (it's been a few years since I did muh integrals, but no reason we can't dust off the ol' [frontal cortex](https://www.sciencedirect.com/science/article/pii/S1878929317300105)). Then I'll write some code with (usually fictional) data to apply the math. We'll start simple with individual neuron firing rates and move on up to reinforcement learning models. Through this blog I hope to:1. Make math great again (for me at least).2. Learn about AI from first principles.3. Hop back into scientific programming.",
                "content_html": "I'm getting a little bored of vanilla back end web development. Sure, building APIs and deploying them to the cloud is fun and all, but you can only do that so many times before it starts to get a little old. So I figured \"Why not learn more about AI?\" and, not wanting to sell myself short, decided to go way back to the basics: Computational Neuroscience. All those neural nets and reinforcement learning algorithms came from somewhere, and that somewhere was the human brain! This blog will cover Dayan and Abbot's _Theoretical Neuroscience_ textbook. I'll try to interpret the math as best I can (it's been a few years since I did muh integrals, but no reason we can't dust off the ol' [frontal cortex](https://www.sciencedirect.com/science/article/pii/S1878929317300105)). Then I'll write some code with (usually fictional) data to apply the math. We'll start simple with individual neuron firing rates and move on up to reinforcement learning models. Through this blog I hope to:1. Make math great again (for me at least).2. Learn about AI from first principles.3. Hop back into scientific programming.",
                "url": "http://localhost:4000/neuroblog_about.html",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "",
                "title": null,
                "content_text": "{% if page.xsl %}{% endif %}{% assign collections = site.collections | where_exp:'collection','collection.output != false' %}{% for collection in collections %}{% assign docs = collection.docs | where_exp:'doc','doc.sitemap != false' %}{% for doc in docs %}{{ doc.url | replace:'/index.html','/' | absolute_url | xml_escape }}{% if doc.last_modified_at or doc.date %}{{ doc.last_modified_at | default: doc.date | date_to_xmlschema }}{% endif %}{% endfor %}{% endfor %}{% assign pages = site.html_pages | where_exp:'doc','doc.sitemap != false' | where_exp:'doc','doc.url != \"/404.html\"' %}{% for page in pages %}{{ page.url | replace:'/index.html','/' | absolute_url | xml_escape }}{% if page.last_modified_at %}{{ page.last_modified_at | date_to_xmlschema }}{% endif %}{% endfor %}{% assign static_files = page.static_files | where_exp:'page','page.sitemap != false' | where_exp:'page','page.name != \"404.html\"' %}{% for file in static_files %}{{ file.path | replace:'/index.html','/' | absolute_url | xml_escape }}{{ file.modified_time | date_to_xmlschema }}{% endfor %}",
                "content_html": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>{% if page.xsl %}<?xml-stylesheet type=\"text/xsl\" href=\"{{ \"/sitemap.xsl\" | absolute_url }}\"?>{% endif %}<urlset xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://www.sitemaps.org/schemas/sitemap/0.9 http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd\" xmlns=\"http://www.sitemaps.org/schemas/sitemap/0.9\">{% assign collections = site.collections | where_exp:'collection','collection.output != false' %}{% for collection in collections %}{% assign docs = collection.docs | where_exp:'doc','doc.sitemap != false' %}{% for doc in docs %}<url><loc>{{ doc.url | replace:'/index.html','/' | absolute_url | xml_escape }}</loc>{% if doc.last_modified_at or doc.date %}<lastmod>{{ doc.last_modified_at | default: doc.date | date_to_xmlschema }}</lastmod>{% endif %}</url>{% endfor %}{% endfor %}{% assign pages = site.html_pages | where_exp:'doc','doc.sitemap != false' | where_exp:'doc','doc.url != \"/404.html\"' %}{% for page in pages %}<url><loc>{{ page.url | replace:'/index.html','/' | absolute_url | xml_escape }}</loc>{% if page.last_modified_at %}<lastmod>{{ page.last_modified_at | date_to_xmlschema }}</lastmod>{% endif %}</url>{% endfor %}{% assign static_files = page.static_files | where_exp:'page','page.sitemap != false' | where_exp:'page','page.name != \"404.html\"' %}{% for file in static_files %}<url><loc>{{ file.path | replace:'/index.html','/' | absolute_url | xml_escape }}</loc><lastmod>{{ file.modified_time | date_to_xmlschema }}</lastmod></url>{% endfor %}</urlset>",
                "url": "http://localhost:4000/sitemap.xml",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "",
                "title": null,
                "content_text": "Sitemap: {{ \"sitemap.xml\" | absolute_url }}",
                "content_html": "Sitemap: {{ \"sitemap.xml\" | absolute_url }}",
                "url": "http://localhost:4000/robots.txt",
                "date_published": "",
                "date_modified": ""
            },
        
            {
                "id": "",
                "title": null,
                "content_text": "{% if page.xsl %}{% endif %}Jekyll{{ site.time | date_to_xmlschema }}{{ page.url | absolute_url | xml_escape }}{% assign title = site.title | default: site.name %}{% if page.collection != \"posts\" %}{% assign collection = page.collection | capitalize %}{% assign title = title | append: \" | \" | append: collection %}{% endif %}{% if page.category %}{% assign category = page.category | capitalize %}{% assign title = title | append: \" | \" | append: category %}{% endif %}{% if title %}{{ title | smartify | xml_escape }}{% endif %}{% if site.description %}{{ site.description | xml_escape }}{% endif %}{% if site.author %}{{ site.author.name | default: site.author | xml_escape }}{% if site.author.email %}{{ site.author.email | xml_escape }}{% endif %}{% if site.author.uri %}{{ site.author.uri | xml_escape }}{% endif %}{% endif %}{% assign posts = site[page.collection] | where_exp: \"post\", \"post.draft != true\" | sort: \"date\" | reverse %}{% if page.category %}{% assign posts = posts | where: \"category\",page.category %}{% endif %}{% for post in posts limit: 10 %}{{ post.title | smartify | strip_html | normalize_whitespace | xml_escape }}{{ post.date | date_to_xmlschema }}{{ post.last_modified_at | default: post.date | date_to_xmlschema }}{{ post.id | absolute_url | xml_escape }}{% assign excerpt_only = post.feed.excerpt_only | default: site.feed.excerpt_only %}{% unless excerpt_only %}{{ post.content | strip | xml_escape }}{% endunless %}{% assign post_author = post.author | default: post.authors[0] | default: site.author %}{% assign post_author = site.data.authors[post_author] | default: post_author %}{% assign post_author_email = post_author.email | default: nil %}{% assign post_author_uri = post_author.uri | default: nil %}{% assign post_author_name = post_author.name | default: post_author %}{{ post_author_name | default: \"\" | xml_escape }}{% if post_author_email %}{{ post_author_email | xml_escape }}{% endif %}{% if post_author_uri %}{{ post_author_uri | xml_escape }}{% endif %}{% if post.category %}{% endif %}{% for tag in post.tags %}{% endfor %}{% if post.excerpt and post.excerpt != empty %}{{ post.excerpt | strip_html | normalize_whitespace | xml_escape }}{% endif %}{% assign post_image = post.image.path | default: post.image %}{% if post_image %}{% unless post_image contains \"://\" %}{% assign post_image = post_image | absolute_url %}{% endunless %}{% endif %}{% endfor %}",
                "content_html": "<?xml version=\"1.0\" encoding=\"utf-8\"?>{% if page.xsl %}<?xml-stylesheet type=\"text/xml\" href=\"{{ '/feed.xslt.xml' | absolute_url }}\"?>{% endif %}<feed xmlns=\"http://www.w3.org/2005/Atom\" {% if site.lang %}xml:lang=\"{{ site.lang }}\"{% endif %}><generator uri=\"https://jekyllrb.com/\" version=\"{{ jekyll.version }}\">Jekyll</generator><link href=\"{{ page.url | absolute_url }}\" rel=\"self\" type=\"application/atom+xml\" /><link href=\"{{ '/' | absolute_url }}\" rel=\"alternate\" type=\"text/html\" {% if site.lang %}hreflang=\"{{ site.lang }}\" {% endif %}/><updated>{{ site.time | date_to_xmlschema }}</updated><id>{{ page.url | absolute_url | xml_escape }}</id>{% assign title = site.title | default: site.name %}{% if page.collection != \"posts\" %}{% assign collection = page.collection | capitalize %}{% assign title = title | append: \" | \" | append: collection %}{% endif %}{% if page.category %}{% assign category = page.category | capitalize %}{% assign title = title | append: \" | \" | append: category %}{% endif %}{% if title %}<title type=\"html\">{{ title | smartify | xml_escape }}</title>{% endif %}{% if site.description %}<subtitle>{{ site.description | xml_escape }}</subtitle>{% endif %}{% if site.author %}<author><name>{{ site.author.name | default: site.author | xml_escape }}</name>{% if site.author.email %}<email>{{ site.author.email | xml_escape }}</email>{% endif %}{% if site.author.uri %}<uri>{{ site.author.uri | xml_escape }}</uri>{% endif %}</author>{% endif %}{% assign posts = site[page.collection] | where_exp: \"post\", \"post.draft != true\" | sort: \"date\" | reverse %}{% if page.category %}{% assign posts = posts | where: \"category\",page.category %}{% endif %}{% for post in posts limit: 10 %}<entry{% if post.lang %}{{\" \"}}xml:lang=\"{{ post.lang }}\"{% endif %}><title type=\"html\">{{ post.title | smartify | strip_html | normalize_whitespace | xml_escape }}</title><link href=\"{{ post.url | absolute_url }}\" rel=\"alternate\" type=\"text/html\" title=\"{{ post.title | xml_escape }}\" /><published>{{ post.date | date_to_xmlschema }}</published><updated>{{ post.last_modified_at | default: post.date | date_to_xmlschema }}</updated><id>{{ post.id | absolute_url | xml_escape }}</id>{% assign excerpt_only = post.feed.excerpt_only | default: site.feed.excerpt_only %}{% unless excerpt_only %}<content type=\"html\" xml:base=\"{{ post.url | absolute_url | xml_escape }}\">{{ post.content | strip | xml_escape }}</content>{% endunless %}{% assign post_author = post.author | default: post.authors[0] | default: site.author %}{% assign post_author = site.data.authors[post_author] | default: post_author %}{% assign post_author_email = post_author.email | default: nil %}{% assign post_author_uri = post_author.uri | default: nil %}{% assign post_author_name = post_author.name | default: post_author %}<author><name>{{ post_author_name | default: \"\" | xml_escape }}</name>{% if post_author_email %}<email>{{ post_author_email | xml_escape }}</email>{% endif %}{% if post_author_uri %}<uri>{{ post_author_uri | xml_escape }}</uri>{% endif %}</author>{% if post.category %}<category term=\"{{ post.category | xml_escape }}\" />{% endif %}{% for tag in post.tags %}<category term=\"{{ tag | xml_escape }}\" />{% endfor %}{% if post.excerpt and post.excerpt != empty %}<summary type=\"html\">{{ post.excerpt | strip_html | normalize_whitespace | xml_escape }}</summary>{% endif %}{% assign post_image = post.image.path | default: post.image %}{% if post_image %}{% unless post_image contains \"://\" %}{% assign post_image = post_image | absolute_url %}{% endunless %}<media:thumbnail xmlns:media=\"http://search.yahoo.com/mrss/\" url=\"{{ post_image | xml_escape }}\" /><media:content medium=\"image\" url=\"{{ post_image | xml_escape }}\" xmlns:media=\"http://search.yahoo.com/mrss/\" />{% endif %}</entry>{% endfor %}</feed>",
                "url": "http://localhost:4000/feed.xml",
                "date_published": "",
                "date_modified": ""
            }
        
    ]           
}